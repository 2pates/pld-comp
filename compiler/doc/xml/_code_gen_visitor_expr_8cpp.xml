<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_code_gen_visitor_expr_8cpp" kind="file" language="C++">
    <compoundname>CodeGenVisitorExpr.cpp</compoundname>
    <includes refid="_code_gen_visitor_8h" local="yes">CodeGenVisitor.h</includes>
    <incdepgraph>
      <node id="2">
        <label>CodeGenVisitor.h</label>
        <link refid="_code_gen_visitor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Error.h</label>
        <link refid="_error_8h"/>
      </node>
      <node id="4">
        <label>IR.h</label>
        <link refid="_i_r_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SymbolGenVisitor.h</label>
        <link refid="_symbol_gen_visitor_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Type.h</label>
        <link refid="_type_8h"/>
      </node>
      <node id="1">
        <label>src/CodeGenVisitorExpr.cpp</label>
        <link refid="_code_gen_visitor_expr_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>antlr4-runtime.h</label>
      </node>
      <node id="12">
        <label>ifccBaseVisitor.h</label>
      </node>
      <node id="5">
        <label>initializer_list</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" prot="public" static="no">
        <name>debug</name>
        <param><defname>expression</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/CodeGenVisitorExpr.cpp" line="7" column="10" bodyfile="src/CodeGenVisitorExpr.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_code_gen_visitor_8h" kindref="compound">CodeGenVisitor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>debug(expression)<sp/>(std::cerr<sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>-&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>(expression)<sp/>&lt;&lt;<sp/>std::endl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>debug(expression)<sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a0a868d6e169c106d91ac383d99654e01" kindref="member">CodeGenVisitor::visitExpr_parenthesis</ref>(ifccParser::Expr_parenthesisContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>visit(ctx-&gt;expr());</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15ae1a39a175e0db60521741b775fcd77ec" kindref="member">IRInstr::Operation::copy</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a8e2ba50a028a20c5c9589569596d9704" kindref="member">CodeGenVisitor::visitExpr_function</ref>(ifccParser::Expr_functionContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>visit(ctx-&gt;function_call());</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15ae1a39a175e0db60521741b775fcd77ec" kindref="member">IRInstr::Operation::copy</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a64b1795897fadbf44432bf98680f5cdb" kindref="member">CodeGenVisitor::visitExpr_unaire</ref>(ifccParser::Expr_unaireContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>var_name<sp/>=<sp/>visit(ctx-&gt;expr());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ctx-&gt;OP-&gt;getText()[0])<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15ab9ae7307714241dd91a0e5cad0a9345a" kindref="member">IRInstr::Operation::bitwise_not</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a6317d64127aa707de4e9c8258f4be689" kindref="member">IRInstr::Operation::neg</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a4ad192fa5de350fb2fa084cd0948d15d" kindref="member">IRInstr::Operation::l_not</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1ac69cc4eab0ee49fc0bdfbb208ce95953" kindref="member">CodeGenVisitor::visitExpr_mult</ref>(ifccParser::Expr_multContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/>ctx-&gt;OP-&gt;getText();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>this-&gt;visit(ctx-&gt;expr(0));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>this-&gt;visit(ctx-&gt;expr(1));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a6636565bd433d10de6878d80f0b75546" kindref="member">IRInstr::Operation::mul</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{a,<sp/>b,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a57a9112e2a510637354fe62dc5364454" kindref="member">IRInstr::Operation::div</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{a,<sp/>b,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a789b6016c462f6c6e5b1671107cd7d08" kindref="member">IRInstr::Operation::mod</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{a,<sp/>b,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a19260411b818b2199080f3253f864ad3" kindref="member">CodeGenVisitor::visitExpr_add</ref>(ifccParser::Expr_addContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/>ctx-&gt;OP-&gt;getText();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>this-&gt;visit(ctx-&gt;expr(0));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>this-&gt;visit(ctx-&gt;expr(1));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a5ea0d6cae2d2b73ce167042d2584aca8" kindref="member">IRInstr::Operation::add</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{a,<sp/>b,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aa55951c56d52ea1ca49066e420be99c0" kindref="member">IRInstr::Operation::sub</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{a,<sp/>b,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a8cb0d5f4716e485f951dd31591fd6a95" kindref="member">CodeGenVisitor::visitExpr_relational</ref>(ifccParser::Expr_relationalContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>left_var_name<sp/>=<sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>right_var_name<sp/>=<sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ope<sp/>=<sp/>ctx-&gt;OP-&gt;getText();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ope<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15abec19d69dcb94e11691886175a6d1473" kindref="member">IRInstr::Operation::cmp_lt</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{left_var_name,<sp/>right_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ope<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&lt;=&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a5105f7cb37d60048d2ffd2bc8261ec1d" kindref="member">IRInstr::Operation::cmp_le</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{left_var_name,<sp/>right_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ope<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a3d7c9a9592555029b0c37d7763f4b0e8" kindref="member">IRInstr::Operation::cmp_gt</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{left_var_name,<sp/>right_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ope<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&gt;=&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a8094d29a10a1104909942c5ab8bd8839" kindref="member">IRInstr::Operation::cmp_ge</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{left_var_name,<sp/>right_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1affc381d8b90ee716eb9f7adf13befb04" kindref="member">CodeGenVisitor::visitExpr_equality</ref>(ifccParser::Expr_equalityContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>left_var_name<sp/>=<sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>right_var_name<sp/>=<sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ope<sp/>=<sp/>ctx-&gt;OP-&gt;getText();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ope<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;==&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15acce36d79a13e3cd29a613b23e61e7313" kindref="member">IRInstr::Operation::cmp_eq</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{left_var_name,<sp/>right_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ope<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;!=&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a45a3acfb454fc68c35403e9c7c6dde54" kindref="member">IRInstr::Operation::cmp_ne</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{left_var_name,<sp/>right_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a8feb86fa301537bd9c443316c5ccdf74" kindref="member">CodeGenVisitor::visitExpr_and</ref>(ifccParser::Expr_andContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>l_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(0));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(1));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a04d7257064ccde262f241be53e8ea6b6" kindref="member">IRInstr::Operation::bitwise_and</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{l_var_name,<sp/>r_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1aeb747269630b2e410b029467e53fe740" kindref="member">CodeGenVisitor::visitExpr_xor</ref>(ifccParser::Expr_xorContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>l_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(0));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(1));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a307d81b7bf9ef660d656b084e90ef1e1" kindref="member">IRInstr::Operation::bitwise_xor</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{l_var_name,<sp/>r_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a19f025270284d847831c828333720536" kindref="member">CodeGenVisitor::visitExpr_or</ref>(ifccParser::Expr_orContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>l_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(0));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(1));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a2a1ca2cc4e800428bfde5f59d88653e6" kindref="member">IRInstr::Operation::bitwise_or</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{l_var_name,<sp/>r_var_name,<sp/>tmp_var_name});</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1af8f24da24f53d81a7ee34036f79a8502" kindref="member">CodeGenVisitor::visitExpr_lazy_and</ref>(ifccParser::Expr_lazy_andContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>l_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(0));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(1));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>*<sp/>nextBB<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>(<ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>,<sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1affb68a8d7b21dff67e4aa3244e8338e1" kindref="member">new_BB_name</ref>());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1aad1ed5a4e961c34bf396b1baae2daf52" kindref="member">add_bb</ref>(nextBB);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>*<sp/>rightBB<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>(<ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>,<sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1affb68a8d7b21dff67e4aa3244e8338e1" kindref="member">new_BB_name</ref>());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1aad1ed5a4e961c34bf396b1baae2daf52" kindref="member">add_bb</ref>(rightBB);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>rightBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aa9b607646606d67933e8b00e8834e7c1" kindref="member">IRInstr::Operation::cmp_const</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{r_var_name,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>tmp_var_name});<sp/></highlight><highlight class="comment">//<sp/>IF<sp/>right<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>rightBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a4ad192fa5de350fb2fa084cd0948d15d" kindref="member">IRInstr::Operation::l_not</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{tmp_var_name,<sp/>tmp_var_name});<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>(right<sp/>==<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>rightBB-&gt;<ref refid="class_basic_block_1ad7dfb0ec10a03ab548f308461e8701e7" kindref="member">exit_true</ref><sp/>=<sp/>nextBB;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>*<sp/>leftBB<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>(<ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>,<sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1affb68a8d7b21dff67e4aa3244e8338e1" kindref="member">new_BB_name</ref>());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1aad1ed5a4e961c34bf396b1baae2daf52" kindref="member">add_bb</ref>(leftBB);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aa9b607646606d67933e8b00e8834e7c1" kindref="member">IRInstr::Operation::cmp_const</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{l_var_name,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>tmp_var_name});<sp/></highlight><highlight class="comment">//<sp/>IF<sp/>left<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a4ad192fa5de350fb2fa084cd0948d15d" kindref="member">IRInstr::Operation::l_not</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{tmp_var_name,<sp/>tmp_var_name});<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>(left<sp/>==<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1ad1ee14abf738e696a394eaac94e1be3b" kindref="member">test_var_name</ref><sp/>=<sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1ad7dfb0ec10a03ab548f308461e8701e7" kindref="member">exit_true</ref><sp/>=<sp/>rightBB;<sp/></highlight><highlight class="comment">//<sp/>IF<sp/>left<sp/>==<sp/>true<sp/>then<sp/>jump<sp/>to<sp/>right<sp/>-&gt;<sp/>check<sp/>if<sp/>right<sp/>is<sp/>also<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1a8fa2b8fbdf5275fb15a7eac08e0ed0ea" kindref="member">exit_false</ref><sp/>=<sp/>nextBB;<sp/></highlight><highlight class="comment">//<sp/>IF<sp/>left<sp/>==<sp/>false<sp/>then<sp/>jump<sp/>to<sp/>next<sp/>-&gt;<sp/>result<sp/>=<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1ad7dfb0ec10a03ab548f308461e8701e7" kindref="member">exit_true</ref><sp/>=<sp/>leftBB;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref><sp/>=<sp/>nextBB;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a43223c10b55671117f2960d8e0093d3f" kindref="member">CodeGenVisitor::visitExpr_lazy_or</ref>(ifccParser::Expr_lazy_orContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tmp_var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>l_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(0));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r_var_name<sp/>=<sp/>visit(ctx-&gt;expr().at(1));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>*<sp/>nextBB<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>(<ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>,<sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1affb68a8d7b21dff67e4aa3244e8338e1" kindref="member">new_BB_name</ref>());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1aad1ed5a4e961c34bf396b1baae2daf52" kindref="member">add_bb</ref>(nextBB);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>*<sp/>rightBB<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>(<ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>,<sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1affb68a8d7b21dff67e4aa3244e8338e1" kindref="member">new_BB_name</ref>());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1aad1ed5a4e961c34bf396b1baae2daf52" kindref="member">add_bb</ref>(rightBB);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>rightBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aa9b607646606d67933e8b00e8834e7c1" kindref="member">IRInstr::Operation::cmp_const</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{r_var_name,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>tmp_var_name});<sp/></highlight><highlight class="comment">//<sp/>IF<sp/>right<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>rightBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a4ad192fa5de350fb2fa084cd0948d15d" kindref="member">IRInstr::Operation::l_not</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{tmp_var_name,<sp/>tmp_var_name});<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>(right<sp/>==<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>rightBB-&gt;<ref refid="class_basic_block_1ad7dfb0ec10a03ab548f308461e8701e7" kindref="member">exit_true</ref><sp/>=<sp/>nextBB;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>*<sp/>leftBB<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_basic_block" kindref="compound">BasicBlock</ref>(<ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>,<sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1affb68a8d7b21dff67e4aa3244e8338e1" kindref="member">new_BB_name</ref>());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1aad1ed5a4e961c34bf396b1baae2daf52" kindref="member">add_bb</ref>(leftBB);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aa9b607646606d67933e8b00e8834e7c1" kindref="member">IRInstr::Operation::cmp_const</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{l_var_name,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>tmp_var_name});<sp/></highlight><highlight class="comment">//<sp/>IF<sp/>left<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15a4ad192fa5de350fb2fa084cd0948d15d" kindref="member">IRInstr::Operation::l_not</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{tmp_var_name,<sp/>tmp_var_name});<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>(left<sp/>==<sp/>false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1ad1ee14abf738e696a394eaac94e1be3b" kindref="member">test_var_name</ref><sp/>=<sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1ad7dfb0ec10a03ab548f308461e8701e7" kindref="member">exit_true</ref><sp/>=<sp/>nextBB;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>left<sp/>==<sp/>true<sp/>then<sp/>jump<sp/>to<sp/>next<sp/>-&gt;<sp/>result<sp/>=<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>leftBB-&gt;<ref refid="class_basic_block_1a8fa2b8fbdf5275fb15a7eac08e0ed0ea" kindref="member">exit_false</ref><sp/>=<sp/>rightBB;<sp/></highlight><highlight class="comment">//<sp/>IF<sp/>left<sp/>==<sp/>false<sp/>then<sp/>jump<sp/>to<sp/>right<sp/>-&gt;<sp/>result<sp/>=<sp/>check<sp/>if<sp/>right<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1ad7dfb0ec10a03ab548f308461e8701e7" kindref="member">exit_true</ref><sp/>=<sp/>leftBB;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref><sp/>=<sp/>nextBB;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp_var_name;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a90b7babc65eaafcbd322274e63eddb02" kindref="member">CodeGenVisitor::visitExpr_atom</ref>(ifccParser::Expr_atomContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>var_name;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;CONST_INT()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>hope<sp/>that<sp/>it&apos;s<sp/>the<sp/>same<sp/>#tmp<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(var_name);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_code_gen_visitor_1a21198465a38edfecbd555aff3465fc17" kindref="member">variables</ref>.find(var_name)<sp/>!=<sp/><ref refid="class_code_gen_visitor_1a21198465a38edfecbd555aff3465fc17" kindref="member">variables</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aca434b8ea2289b300adffe4d7177464b" kindref="member">IRInstr::Operation::ldconst</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{ctx-&gt;CONST_INT()-&gt;getText(),<sp/>var_name});</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>variable<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1adaad15d8a1852d256c64c32560a549d3" kindref="member">PROGRAMER_ERROR</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;CONST_CHAR()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>hope<sp/>that<sp/>it&apos;s<sp/>the<sp/>same<sp/>#tmp<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(var_name);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_code_gen_visitor_1a21198465a38edfecbd555aff3465fc17" kindref="member">variables</ref>.find(var_name)<sp/>!=<sp/><ref refid="class_code_gen_visitor_1a21198465a38edfecbd555aff3465fc17" kindref="member">variables</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numerical_value<sp/>=<sp/>int(ctx-&gt;CONST_CHAR()-&gt;getText()[1]);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>value<sp/>=<sp/>std::to_string(numerical_value);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(value);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aca434b8ea2289b300adffe4d7177464b" kindref="member">IRInstr::Operation::ldconst</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7ac1081c62db14e24ef35a1c3c36cba2e7" kindref="member">Type::INT32</ref>,<sp/>{value,<sp/>var_name});</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>variable<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1adaad15d8a1852d256c64c32560a549d3" kindref="member">PROGRAMER_ERROR</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;CONST_VOID()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_code_gen_visitor_1aac0c3060638d933fa2c12030901d7ce4" kindref="member">tmp_index</ref>);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>hope<sp/>that<sp/>it&apos;s<sp/>the<sp/>same<sp/>#tmp<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(var_name);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_code_gen_visitor_1a21198465a38edfecbd555aff3465fc17" kindref="member">variables</ref>.find(var_name)<sp/>!=<sp/><ref refid="class_code_gen_visitor_1a21198465a38edfecbd555aff3465fc17" kindref="member">variables</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;CONST_VOID()-&gt;getText()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_code_gen_visitor_1adfdbda3eb128c2a4b8672a465b5a2401" kindref="member">cfg</ref>-&gt;<ref refid="class_c_f_g_1a37b50f8c106bb96c1ba23bba6bddacb7" kindref="member">current_bb</ref>-&gt;<ref refid="class_basic_block_1a8ab08d90dc0171eb26e4852ee1f43ed4" kindref="member">add_IRInstr</ref>(<ref refid="class_i_r_instr_1a4e228546957ed6096a45f48d7cfc7f15aca434b8ea2289b300adffe4d7177464b" kindref="member">IRInstr::Operation::ldconst</ref>,<sp/><ref refid="_type_8h_1a1d1cfd8ffb84e947f82999c682b666a7aad7dce162b42b3d0968ffa57fad43512" kindref="member">Type::POINTER</ref>,<sp/>{</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>var_name});</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>variable<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1adaad15d8a1852d256c64c32560a549d3" kindref="member">PROGRAMER_ERROR</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;VARNAME()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_name<sp/>=<sp/><ref refid="class_code_gen_visitor_1af3c6251e81299cebb86514e587e07ab5" kindref="member">get_unique_var_name</ref>(ctx-&gt;VARNAME()-&gt;getText());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(var_name);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var_name;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_code_gen_visitor_1a08174ad1083d84ce09e79480f21cbbc1" kindref="member">CodeGenVisitor::visitExpr_assignment</ref>(ifccParser::Expr_assignmentContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>var_name<sp/>=<sp/>visit(ctx-&gt;assignment_stmt());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var_name;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/CodeGenVisitorExpr.cpp"/>
  </compounddef>
</doxygen>

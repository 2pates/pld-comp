<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_symbol_gen_visitor_8cpp" kind="file" language="C++">
    <compoundname>SymbolGenVisitor.cpp</compoundname>
    <includes refid="_symbol_gen_visitor_8h" local="yes">SymbolGenVisitor.h</includes>
    <includes refid="_error_8h" local="yes">Error.h</includes>
    <incdepgraph>
      <node id="8">
        <label>Error.h</label>
        <link refid="_error_8h"/>
      </node>
      <node id="2">
        <label>SymbolGenVisitor.h</label>
        <link refid="_symbol_gen_visitor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/SymbolGenVisitor.cpp</label>
        <link refid="_symbol_gen_visitor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>antlr4-runtime.h</label>
      </node>
      <node id="7">
        <label>ifccBaseVisitor.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_symbol_gen_visitor_8h" kindref="compound">SymbolGenVisitor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_error_8h" kindref="compound">Error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a9a8e95782bbd532ef411967ab02390a3" kindref="member">SymbolGenVisitor::visitProg</ref>(ifccParser::ProgContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a8ce1344a310f9164cd18f17936d8b7e8" kindref="member">currentFunction</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;block());</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>function<sp/>:<sp/>ctx-&gt;function_def())<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(function);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1aed28e708ebcee2c272aa774c4efa1bf6" kindref="member">SymbolGenVisitor::visitBlock</ref>(ifccParser::BlockContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a6e64627695cc7eebb5d6d1012645c167" kindref="member">tmp_block_index</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>increase<sp/>the<sp/>number<sp/>of<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a1ea8a5fc10d9c12dd766e7857a0cef8c" kindref="member">blocks</ref>.insert({<ref refid="class_symbol_gen_visitor_1a6e64627695cc7eebb5d6d1012645c167" kindref="member">tmp_block_index</ref>,<sp/><ref refid="class_symbol_gen_visitor_1ab040a4dfc3af1f7f059355508dfd1668" kindref="member">current_block</ref>});<sp/></highlight><highlight class="comment">//<sp/>set<sp/>father</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1ab040a4dfc3af1f7f059355508dfd1668" kindref="member">current_block</ref><sp/>=<sp/><ref refid="class_symbol_gen_visitor_1a6e64627695cc7eebb5d6d1012645c167" kindref="member">tmp_block_index</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>instr<sp/>:<sp/>ctx-&gt;statement())<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;visit(instr);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1ab040a4dfc3af1f7f059355508dfd1668" kindref="member">current_block</ref><sp/>=<sp/><ref refid="class_symbol_gen_visitor_1a1ea8a5fc10d9c12dd766e7857a0cef8c" kindref="member">blocks</ref>.at(<ref refid="class_symbol_gen_visitor_1ab040a4dfc3af1f7f059355508dfd1668" kindref="member">current_block</ref>);<sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>is<sp/>now<sp/>the<sp/>father</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1afac330c7572d54dcab2c271ef9ff9721" kindref="member">SymbolGenVisitor::visitFunction_call</ref>(ifccParser::Function_callContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>be<sp/>implemented<sp/>to<sp/>say<sp/>that<sp/>variables<sp/>are<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assigns<sp/>memory<sp/>in<sp/>case<sp/>it&apos;s<sp/>being<sp/>used<sp/>in<sp/>an<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ctx-&gt;expr().size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[i]);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({</highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a934375c2af9226e511c25ded8f08838a" kindref="member">SymbolGenVisitor::visitFunction_def</ref>(ifccParser::Function_defContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a8ce1344a310f9164cd18f17936d8b7e8" kindref="member">currentFunction</ref><sp/>=<sp/>ctx-&gt;VARNAME()-&gt;getText();<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>if<sp/>reserved<sp/>keyword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitChildren(ctx);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a41511111b07dc3877967cb119b0ed089" kindref="member">SymbolGenVisitor::visitDeclare_only_stmt</ref>(ifccParser::Declare_only_stmtContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;lvalue());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>ctx-&gt;lvalue()-&gt;getText();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unique_name<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1adefd08d6d84c0f7e0e82662dd07366ae" kindref="member">create_unique_var_name</ref>(name);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1a3e098dada334943a05a0622e5e917816" kindref="member">check_exist_in_current_block</ref>(name)<sp/>!=<sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref><sp/>var(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({unique_name,<sp/>var});</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Declaration:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>unique_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(address<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(var.address)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_error_8h_1a70d424fbd5a26d1cb39a8756db10bf2c" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>already<sp/>used<sp/>name&quot;</highlight><highlight class="normal"><sp/>+<sp/>unique_name);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1a872e23aae5f693fb817ef8b3c52374ed" kindref="member">DOUBLE_DECLARATION</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;declare_only_stmt()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(ctx-&gt;declare_only_stmt());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a27e7def074fcc48aaeb7349fb3a047e0" kindref="member">SymbolGenVisitor::visitDeclare_stmt</ref>(ifccParser::Declare_stmtContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a9972343676d78ccabacf4dcb93a273b1" kindref="member">declaration_mode</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unique_name;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref><sp/>var;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>:<sp/>ctx-&gt;lvalue())<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(it);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>it-&gt;getText();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_name<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1adefd08d6d84c0f7e0e82662dd07366ae" kindref="member">create_unique_var_name</ref>(name);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1a3e098dada334943a05a0622e5e917816" kindref="member">check_exist_in_current_block</ref>(name)<sp/>!=<sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;pointer_type()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>8,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;char&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;void&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1af64a2dd6c262c41c7de3e3a27b561cbb" kindref="member">VOID_VARIABLE</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({unique_name,<sp/>var});</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Declaration:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>unique_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(address<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(var.<ref refid="class_variable_info_1aac07859b2fdcae95d4e4ef1e6800c53f" kindref="member">address</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_error_8h_1a70d424fbd5a26d1cb39a8756db10bf2c" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>already<sp/>used<sp/>name&quot;</highlight><highlight class="normal"><sp/>+<sp/>unique_name);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1a872e23aae5f693fb817ef8b3c52374ed" kindref="member">DOUBLE_DECLARATION</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>:<sp/>ctx-&gt;assignment_stmt())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifccParser::Assignment_equalContext*<sp/>child_ctx<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">ifccParser::Assignment_equalContext*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(it))<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>child_ctx-&gt;lvalue()-&gt;VARNAME()-&gt;getText();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_name<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1adefd08d6d84c0f7e0e82662dd07366ae" kindref="member">create_unique_var_name</ref>(name);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1a3e098dada334943a05a0622e5e917816" kindref="member">check_exist_in_current_block</ref>(name)<sp/>==<sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1a872e23aae5f693fb817ef8b3c52374ed" kindref="member">DOUBLE_DECLARATION</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(child_ctx-&gt;lvalue());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child_ctx-&gt;lvalue()-&gt;pointer_type()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>8,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;char&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>3;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;void&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1af64a2dd6c262c41c7de3e3a27b561cbb" kindref="member">VOID_VARIABLE</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({unique_name,<sp/>var});</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(child_ctx-&gt;rvalue());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(it);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a9972343676d78ccabacf4dcb93a273b1" kindref="member">declaration_mode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>antlrcpp::Any<sp/>SymbolGenVisitor::visitDeclare(ifccParser::DeclareContext*<sp/>ctx)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ctx-&gt;lvalue()<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(ctx-&gt;lvalue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>ctx-&gt;lvalue()-&gt;getText();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unique_name<sp/>=<sp/>create_unique_var_name(name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(check_exist_in_current_block(name)<sp/>!=<sp/>GOOD)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(it-&gt;pointer_type()<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>8;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>8,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;int&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>4;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;char&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>4;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;void&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(VOID_VARIABLE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables.insert({unique_name,<sp/>var});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug(&quot;Declaration:<sp/>&quot;<sp/>+<sp/>unique_name<sp/>+<sp/>&quot;<sp/>(address<sp/>&quot;<sp/>+<sp/>std::to_string(var.address)<sp/>+<sp/>&quot;)&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(&quot;Error:<sp/>already<sp/>used<sp/>name&quot;<sp/>+<sp/>unique_name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(DOUBLE_DECLARATION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>it<sp/>:<sp/>ctx-&gt;assignment_stmt())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>it-&gt;lvalue()-&gt;VARNAME()-&gt;getText();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_name<sp/>=<sp/>create_unique_var_name(name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(check_exist_in_current_block(name)<sp/>==<sp/>GOOD)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(DOUBLE_DECLARATION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(it-&gt;lvalue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(it-&gt;lvalue()-&gt;pointer_type()<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>8;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>8,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;int&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>4;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;char&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>1;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;void&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(VOID_VARIABLE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables.insert({unique_name,<sp/>var});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(it-&gt;rvalue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>declaration_mode<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>GOOD;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>antlrcpp::Any<sp/>SymbolGenVisitor::visitDeclare(ifccParser::DeclareContext*<sp/>ctx)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(ctx-&gt;lvalue()<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(ctx-&gt;lvalue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>ctx-&gt;lvalue()-&gt;getText();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unique_name<sp/>=<sp/>create_unique_var_name(name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(check_exist_in_current_block(name)<sp/>!=<sp/>GOOD)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(it-&gt;pointer_type()<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>8;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>8,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;int&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>4;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;char&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>4;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;void&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(VOID_VARIABLE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables.insert({unique_name,<sp/>var});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug(&quot;Declaration:<sp/>&quot;<sp/>+<sp/>unique_name<sp/>+<sp/>&quot;<sp/>(address<sp/>&quot;<sp/>+<sp/>std::to_string(var.address)<sp/>+<sp/>&quot;)&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(&quot;Error:<sp/>already<sp/>used<sp/>name&quot;<sp/>+<sp/>unique_name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(DOUBLE_DECLARATION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>it<sp/>:<sp/>ctx-&gt;assignment_stmt())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>it-&gt;lvalue()-&gt;VARNAME()-&gt;getText();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_name<sp/>=<sp/>create_unique_var_name(name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(check_exist_in_current_block(name)<sp/>==<sp/>GOOD)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(DOUBLE_DECLARATION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(it-&gt;lvalue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(it-&gt;lvalue()-&gt;pointer_type()<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>8;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>8,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;int&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>4;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;char&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>1;<sp/>//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>=<sp/>VariableInfo(memory_offset,<sp/>4,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_offset<sp/>-=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ctx-&gt;type()-&gt;getText()<sp/>==<sp/>&quot;void&quot;)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(VOID_VARIABLE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables.insert({unique_name,<sp/>var});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(it-&gt;rvalue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>declaration_mode<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>GOOD;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a1abd68707bd03605bd17edebc52338e7" kindref="member">SymbolGenVisitor::visitAssignment_equal</ref>(ifccParser::Assignment_equalContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>ctx-&gt;lvalue()-&gt;VARNAME()-&gt;getText();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unique_name<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1adefd08d6d84c0f7e0e82662dd07366ae" kindref="member">create_unique_var_name</ref>(name);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_symbol_gen_visitor_1ac3f6d81892433b961f8ef668c90f6a26" kindref="member">inExpr</ref>){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.at(<ref refid="class_symbol_gen_visitor_1a634496cc94fd4024195482473c68f83b" kindref="member">get_unique_var_name</ref>(ctx-&gt;lvalue()-&gt;VARNAME()-&gt;getText())).used=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Affectation<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>unique_name);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1a9972343676d78ccabacf4dcb93a273b1" kindref="member">declaration_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1a3e098dada334943a05a0622e5e917816" kindref="member">check_exist_in_current_block</ref>(name)<sp/>==<sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_error_8h_1a70d424fbd5a26d1cb39a8756db10bf2c" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>double<sp/>declared<sp/>variable<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1a872e23aae5f693fb817ef8b3c52374ed" kindref="member">DOUBLE_DECLARATION</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(ctx-&gt;lvalue());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>decrement<sp/>index<sp/>first<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref><sp/>var(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({unique_name,<sp/>var});</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(ctx-&gt;rvalue());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1a4b065ef073f7fb14adfc9e6084fff625" kindref="member">check_exist_in_current_or_parent_block</ref>(name)<sp/>==<sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visit(ctx-&gt;rvalue());</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Affectation:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>unique_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>ctx-&gt;rvalue()-&gt;getText());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_error_8h_1a70d424fbd5a26d1cb39a8756db10bf2c" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>undeclared<sp/>variable<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>unique_name);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1ac3d6c1c963c9219568a7190f93e82fdc" kindref="member">UNDECLARED</ref>);<sp/></highlight><highlight class="comment">//<sp/>undeclared<sp/>variable<sp/>affectation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a8d4015069dde7b7833743be6ac5948d9" kindref="member">SymbolGenVisitor::visitSelection_if</ref>(ifccParser::Selection_ifContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;visit(ctx-&gt;expr());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;visit(ctx-&gt;statement()[0]);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;statement().size()&gt;=2<sp/>&amp;&amp;<sp/>ctx-&gt;statement()[1]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;visit(ctx-&gt;statement()[1]);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1ab65184d1ecc04d2327bf081a6cbd3abb" kindref="member">SymbolGenVisitor::visitIteration_while</ref>(ifccParser::Iteration_whileContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;visit(ctx-&gt;expr());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;visit(ctx-&gt;statement());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a73a0394081b59ad5ab8b8dac62f3c889" kindref="member">SymbolGenVisitor::visitLvalue</ref>(ifccParser::LvalueContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>ctx-&gt;VARNAME()-&gt;getText();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(<ref refid="class_symbol_gen_visitor_1a6bcf0e30a81fd43b7309b511ba4c7719" kindref="member">reserved_word</ref>.begin(),<sp/><ref refid="class_symbol_gen_visitor_1a6bcf0e30a81fd43b7309b511ba4c7719" kindref="member">reserved_word</ref>.end(),<sp/>name)<sp/>!=<sp/><ref refid="class_symbol_gen_visitor_1a6bcf0e30a81fd43b7309b511ba4c7719" kindref="member">reserved_word</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_error_8h_1a70d424fbd5a26d1cb39a8756db10bf2c" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>reserved<sp/>keyword<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(<ref refid="_error_8h_1aa3ff176dff916a44c635d78830c38d28" kindref="member">RESERVED_KEY_WORD</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1aaf884252a1552620e739af6c0aa6ca3c" kindref="member">SymbolGenVisitor::visitExpr_relational</ref>(ifccParser::Expr_relationalContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1aed0b914f9860751b05c3de8bf10b448a" kindref="member">SymbolGenVisitor::visitExpr_equality</ref>(ifccParser::Expr_equalityContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a6ded1458532569d70c0b9031185189ea" kindref="member">SymbolGenVisitor::visitExpr_mult</ref>(ifccParser::Expr_multContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;visit(ctx-&gt;expr(0));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;visit(ctx-&gt;expr(1));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({</highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a46b31f2d90095102500c7f48457d745c" kindref="member">SymbolGenVisitor::visitExpr_atom</ref>(ifccParser::Expr_atomContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;CONST_INT()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;CONST_CHAR()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;CONST_VOID()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>8)});</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;VARNAME()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.at(<ref refid="class_symbol_gen_visitor_1a634496cc94fd4024195482473c68f83b" kindref="member">get_unique_var_name</ref>(ctx-&gt;VARNAME()-&gt;getText())).used=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1adaad15d8a1852d256c64c32560a549d3" kindref="member">PROGRAMER_ERROR</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a95656fe25c24c12abe47ba610d06e878" kindref="member">SymbolGenVisitor::visitExpr_add</ref>(ifccParser::Expr_addContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({</highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Inserted<sp/>(Expr_add)<sp/>#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(address<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1ac2e8005312e270407fb1218d7a31f2fa" kindref="member">SymbolGenVisitor::visitExpr_assignment</ref>(ifccParser::Expr_assignmentContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prev_declaration_mode<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1a9972343676d78ccabacf4dcb93a273b1" kindref="member">declaration_mode</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a9972343676d78ccabacf4dcb93a273b1" kindref="member">declaration_mode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1ac3f6d81892433b961f8ef668c90f6a26" kindref="member">inExpr</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;assignment_stmt());</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1ac3f6d81892433b961f8ef668c90f6a26" kindref="member">inExpr</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a9972343676d78ccabacf4dcb93a273b1" kindref="member">declaration_mode</ref><sp/>=<sp/>prev_declaration_mode;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1af448ed65031a5858172ae84fb2579832" kindref="member">SymbolGenVisitor::visitAssignment_add</ref>(ifccParser::Assignment_addContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;rvalue());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a5062acc098dff32ff01e2df0c352cdff" kindref="member">SymbolGenVisitor::visitAssignment_mult</ref>(ifccParser::Assignment_multContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;rvalue());</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a988552420b54109b62bd01d445f57ffe" kindref="member">SymbolGenVisitor::visitPre_incrementation</ref>(ifccParser::Pre_incrementationContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.at(<ref refid="class_symbol_gen_visitor_1a634496cc94fd4024195482473c68f83b" kindref="member">get_unique_var_name</ref>(ctx-&gt;lvalue()-&gt;VARNAME()-&gt;getText())).used=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;lvalue());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1ac5b4fe308d6b8578998c1e241fd917dd" kindref="member">SymbolGenVisitor::visitPost_incrementation</ref>(ifccParser::Post_incrementationContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({</highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_code_gen_visitor_expr_8cpp_1ad5f256033fce9a93a4bf0dd3ef8fa206" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;Inserted<sp/>#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(address<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.at(<ref refid="class_symbol_gen_visitor_1a634496cc94fd4024195482473c68f83b" kindref="member">get_unique_var_name</ref>(ctx-&gt;lvalue()-&gt;VARNAME()-&gt;getText())).used=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;lvalue());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a02a42a4a4dfb6efa44b25aa083a74abf" kindref="member">SymbolGenVisitor::visitExpr_function</ref>(ifccParser::Expr_functionContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;function_call());</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({</highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a79768b277f70680c78fe807147293c40" kindref="member">SymbolGenVisitor::visitExpr_and</ref>(ifccParser::Expr_andContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a990ad459fdb9259ec108d805e4871873" kindref="member">SymbolGenVisitor::visitExpr_xor</ref>(ifccParser::Expr_xorContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1abfd977e16bf09b760d2f74615eb3ac2b" kindref="member">SymbolGenVisitor::visitExpr_or</ref>(ifccParser::Expr_orContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a68fe727231c3c96c03fd4ae52679a419" kindref="member">SymbolGenVisitor::visitExpr_lazy_and</ref>(ifccParser::Expr_lazy_andContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({</highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a1b9e608a80f3fa10f5a0714da5e6fed5" kindref="member">SymbolGenVisitor::visitExpr_lazy_or</ref>(ifccParser::Expr_lazy_orContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[0]);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr()[1]);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1aa4d6b2e663652becfb8e7bed74d88abc" kindref="member">SymbolGenVisitor::visitExpr_unaire</ref>(ifccParser::Expr_unaireContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr());</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({<ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">get_new_tmp_varname</ref>(),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_symbol_gen_visitor_1a3e098dada334943a05a0622e5e917816" kindref="member">SymbolGenVisitor::check_exist_in_current_block</ref>(std::string<sp/>varname)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.find(<ref refid="class_symbol_gen_visitor_1adefd08d6d84c0f7e0e82662dd07366ae" kindref="member">create_unique_var_name</ref>(varname))<sp/>!=<sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.end())</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1ac3d6c1c963c9219568a7190f93e82fdc" kindref="member">UNDECLARED</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_symbol_gen_visitor_1a4b065ef073f7fb14adfc9e6084fff625" kindref="member">SymbolGenVisitor::check_exist_in_current_or_parent_block</ref>(std::string<sp/>varname)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1ab040a4dfc3af1f7f059355508dfd1668" kindref="member">current_block</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(block<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unique_var_name<sp/>=<sp/>varname<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_symbol_gen_visitor_1a8ce1344a310f9164cd18f17936d8b7e8" kindref="member">currentFunction</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(block);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.find(unique_var_name)<sp/>!=<sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.end())</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1a4adf7c6105c54a1608753548236d1387" kindref="member">GOOD</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1a1ea8a5fc10d9c12dd766e7857a0cef8c" kindref="member">blocks</ref>.at(block);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_error_8h_1ac3d6c1c963c9219568a7190f93e82fdc" kindref="member">UNDECLARED</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">std::string<sp/><ref refid="class_symbol_gen_visitor_1a8aba7d34e0b52690f0f069aa21846581" kindref="member">SymbolGenVisitor::get_new_tmp_varname</ref>()<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">std::string<sp/><ref refid="class_symbol_gen_visitor_1adefd08d6d84c0f7e0e82662dd07366ae" kindref="member">SymbolGenVisitor::create_unique_var_name</ref>(std::string<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_symbol_gen_visitor_1a8ce1344a310f9164cd18f17936d8b7e8" kindref="member">currentFunction</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1ab040a4dfc3af1f7f059355508dfd1668" kindref="member">current_block</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">antlrcpp::Any<sp/><ref refid="class_symbol_gen_visitor_1a2aed2fd0eea723849d88ae0098be956f" kindref="member">SymbolGenVisitor::visitExpr_parenthesis</ref>(ifccParser::Expr_parenthesisContext*<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>visit(ctx-&gt;expr());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref><sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>++;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.insert({</highlight><highlight class="stringliteral">&quot;#tmp&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_symbol_gen_visitor_1a95edb7574c517b0eabbd094d7f560b1d" kindref="member">tmp_index</ref>),<sp/><ref refid="class_variable_info" kindref="compound">VariableInfo</ref>(<ref refid="class_symbol_gen_visitor_1a5bb1757ba7c57b93b117660ec4c1e2a3" kindref="member">memory_offset</ref>,<sp/>4)});</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal">std::string<sp/><ref refid="class_symbol_gen_visitor_1a634496cc94fd4024195482473c68f83b" kindref="member">SymbolGenVisitor::get_unique_var_name</ref>(std::string<sp/>varname)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1ab040a4dfc3af1f7f059355508dfd1668" kindref="member">current_block</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(block<sp/>!=<sp/>-1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>finds<sp/>in<sp/>blocks<sp/>starting<sp/>from<sp/>the<sp/>upper<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unique_var_name<sp/>=<sp/>varname<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_symbol_gen_visitor_1a8ce1344a310f9164cd18f17936d8b7e8" kindref="member">currentFunction</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(block);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.find(unique_var_name)<sp/>!=<sp/><ref refid="class_symbol_gen_visitor_1adc9b1ed0de92feff8d9fe64c69e46cee" kindref="member">variables</ref>.end())</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unique_var_name;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/><ref refid="class_symbol_gen_visitor_1a1ea8a5fc10d9c12dd766e7857a0cef8c" kindref="member">blocks</ref>.at(block);<sp/></highlight><highlight class="comment">//<sp/>decrease<sp/>block<sp/>lvl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/SymbolGenVisitor.cpp"/>
  </compounddef>
</doxygen>
